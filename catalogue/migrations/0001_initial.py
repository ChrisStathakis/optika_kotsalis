# Generated by Django 2.2 on 2019-09-12 13:50

import catalogue.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('have_transcations', models.BooleanField(default=True, verbose_name='Υποστηρίζει Συναλλαγές')),
            ],
            options={
                'verbose_name_plural': 'Attribute Class Title',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Ενεργοποίηση')),
                ('title', models.CharField(max_length=120, verbose_name='Ονομασία Brand')),
                ('image', models.ImageField(blank=True, upload_to='brands/', validators=[catalogue.validators.validate_file], verbose_name='Εικόνα')),
                ('order_by', models.IntegerField(default=1, verbose_name='Σειρά Προτεριότητας')),
                ('meta_description', models.CharField(blank=True, max_length=255)),
                ('width', models.IntegerField(default=240)),
                ('height', models.IntegerField(default=240)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': '4. Brands',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=120, verbose_name='Τίτλος')),
                ('image', models.ImageField(blank=True, help_text='610*410', null=True, upload_to=catalogue.validators.category_site_directory_path, verbose_name='Εικόνα')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Σχόλια')),
                ('timestamp', models.DateField(auto_now=True)),
                ('meta_description', models.CharField(blank=True, max_length=300)),
                ('order', models.IntegerField(default=1)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('show_on_menu', models.BooleanField(default=False, verbose_name='Active on Navbar')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalogue.Category')),
            ],
            options={
                'verbose_name_plural': '3. Κατηγορίες Site',
                'unique_together': {('slug', 'parent')},
            },
            managers=[
                ('browser', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Characteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Status')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('custom_ordering', models.IntegerField(default=1)),
                ('title', models.CharField(max_length=120, unique=True, verbose_name='Τίτλος')),
                ('is_filter', models.BooleanField(default=False, verbose_name='Εμφάνιση στα Φίλτρα')),
                ('user_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            managers=[
                ('browser', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CharacteristicsValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Status')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=120, unique=True)),
                ('custom_ordering', models.IntegerField(default=0, help_text='Bigger is better', verbose_name='Ordering')),
                ('char_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_values', to='catalogue.Characteristics')),
                ('user_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-custom_ordering', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Κατασταση')),
                ('hex_code', models.CharField(blank=True, max_length=150)),
                ('title', models.CharField(max_length=250, unique=True, verbose_name='Τιτλος')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Status')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('edited', models.DateTimeField(auto_now=True)),
                ('custom_ordering', models.IntegerField(default=1)),
                ('warehouse_active', models.BooleanField(default=True, verbose_name='Ενεργό στην Αποθήκη')),
                ('is_offer', models.BooleanField(default=False, verbose_name='Προσφορά')),
                ('featured_product', models.BooleanField(default=False, verbose_name='Εμφάνιση Πρώτη Σελίδα')),
                ('order_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Κωδικός Τιμολογίου')),
                ('price_buy', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Αξία Αγοράς')),
                ('order_discount', models.IntegerField(default=0, verbose_name="'Έκπτωση Τιμολογίου")),
                ('qty_measure', models.DecimalField(blank=True, decimal_places=2, default=1, max_digits=10, null=True, verbose_name='Ποσότητα Ανά Τεμάχιο')),
                ('qty', models.IntegerField(default=0, verbose_name='Ποσότητα')),
                ('qty_add', models.IntegerField(default=0.0, help_text='we use this for manual add.', verbose_name='Υπόλοιπο')),
                ('qty_remove', models.IntegerField(default=0.0, help_text='System use it only if warehouse transations', verbose_name='Qty Remove')),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Περιγραφή')),
                ('measure_unit', models.CharField(blank=True, choices=[('1', 'Τεμάχια'), ('2', 'Κιλά'), ('3', 'Κιβώτια')], default='1', max_length=1, null=True, verbose_name='Μονάδα Μέτρησης')),
                ('safe_stock', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Όριο αποθέματος')),
                ('sku', models.CharField(blank=True, max_length=150, null=True)),
                ('site_text', tinymce.models.HTMLField(blank=True, null=True)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=240, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Αρχική Τιμή')),
                ('price_discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Εκπτωτική Τιμή')),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, verbose_name='Τιμή Πώλησης')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.Brand', verbose_name='Brand')),
            ],
            options={
                'verbose_name_plural': '1. Products',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ProductClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('is_service', models.BooleanField(default=False, verbose_name='Υπηρεσία')),
                ('have_transcations', models.BooleanField(default=True, verbose_name='Υποστηρίζει συναλλαγές')),
                ('have_attribute', models.BooleanField(default=False, verbose_name='Μεγεθολόγιο')),
            ],
            options={
                'verbose_name': 'Product Class',
                'verbose_name_plural': 'Product Classes',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Κατάσταση')),
                ('title', models.CharField(max_length=70, unique=True, verbose_name='Ονομασία')),
                ('vat', models.CharField(blank=True, max_length=9, null=True, verbose_name='ΑΦΜ')),
                ('vat_city', models.CharField(blank=True, max_length=100, null=True, verbose_name='ΔΟΥ')),
                ('phone', models.CharField(blank=True, max_length=10, null=True, verbose_name='Κινητό')),
                ('phone1', models.CharField(blank=True, max_length=10, null=True, verbose_name='Σταθερό')),
                ('fax', models.CharField(blank=True, max_length=10, null=True, verbose_name='Fax')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('site', models.URLField(blank=True, max_length=40, null=True, verbose_name='Site')),
                ('address', models.CharField(blank=True, max_length=40, null=True, verbose_name='Διεύθυνση')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='Πόλη')),
                ('zipcode', models.CharField(blank=True, max_length=40, null=True, verbose_name='ΤΚ')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Σημειώσεις')),
                ('timestamp', models.DateField(auto_now_add=True, null=True)),
                ('taxes_modifier', models.CharField(choices=[('1', 13), ('2', 23), ('3', 24), ('4', 0)], default='3', max_length=1, verbose_name='ΦΠΑ')),
                ('input_value', models.DecimalField(decimal_places=2, default=0.0, help_text='Total Payments', max_digits=100)),
                ('output_value', models.DecimalField(decimal_places=2, default=0.0, help_text='Total Invoice Cost', max_digits=100)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
            ],
            options={
                'verbose_name_plural': '9. Προμηθευτές',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='WarehouseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=70, unique=True, verbose_name='Τίτλος Κατηγορίας')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Περιγραφή')),
            ],
            options={
                'verbose_name': '3. Κατηγορίες Αποθήκης',
                'verbose_name_plural': '3. Κατηγορίες Αποθήκης',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ProductPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=catalogue.validators.upload_product_photo, validators=[catalogue.validators.validate_file])),
                ('alt', models.CharField(blank=True, help_text='Θα δημιουργηθεί αυτόματα εάν δεν συμπληρωθεί', max_length=200, null=True)),
                ('title', models.CharField(blank=True, help_text='Θα δημιουργηθεί αυτόματα εάν δεν συμπληρωθεί', max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary Picture')),
                ('is_back', models.BooleanField(default=False, verbose_name='Δεύτερη Εικόνα')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalogue.Product')),
            ],
            options={
                'verbose_name_plural': 'Gallery',
                'ordering': ['-is_primary'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.WarehouseCategory', verbose_name='Κατηγορία Αποθήκης'),
        ),
        migrations.AddField(
            model_name='product',
            name='category_site',
            field=models.ManyToManyField(blank=True, null=True, to='catalogue.Category', verbose_name='Κατηγορία Site'),
        ),
        migrations.AddField(
            model_name='product',
            name='color',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.Color', verbose_name='Χρωμα'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.ProductClass', verbose_name='Είδος'),
        ),
        migrations.AddField(
            model_name='product',
            name='related_products',
            field=models.ManyToManyField(blank=True, related_name='_product_related_products_+', to='catalogue.Product', verbose_name='Related Products'),
        ),
        migrations.AddField(
            model_name='product',
            name='user_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalogue.Vendor', verbose_name='Προμηθευτής'),
        ),
        migrations.CreateModel(
            name='Gifts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('gift_message', models.CharField(max_length=200, unique=True)),
                ('status', models.BooleanField(default=False)),
                ('product_related', models.ManyToManyField(related_name='product_related', to='catalogue.Product')),
                ('products_gift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogue.Product')),
            ],
        ),
        migrations.CreateModel(
            name='AttributeTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateField(auto_now=True)),
                ('name', models.CharField(max_length=120, verbose_name='Τίτλος')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('attri_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_values', to='catalogue.AttributeClass')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalogue.AttributeTitle')),
            ],
            options={
                'verbose_name_plural': 'Τιμες Μεγεθολόγιου',
                'unique_together': {('name', 'attri_by')},
            },
        ),
        migrations.CreateModel(
            name='AttributeProductClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.AttributeClass')),
                ('product_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attr_class', to='catalogue.Product', verbose_name='Προϊόν')),
            ],
            options={
                'verbose_name_plural': 'Product Attribute Class',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0, verbose_name='Ποσότητα')),
                ('qty_add', models.IntegerField(default=0.0, help_text='we use this for manual add.', verbose_name='Υπόλοιπο')),
                ('qty_remove', models.IntegerField(default=0.0, help_text='System use it only if warehouse transations', verbose_name='Qty Remove')),
                ('order_discount', models.IntegerField(blank=True, default=0, null=True, verbose_name="'Εκπτωση Τιμολογίου σε %")),
                ('price_buy', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Τιμή Αγοράς')),
                ('show_on_site', models.BooleanField(default=True)),
                ('class_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_attributes', to='catalogue.AttributeProductClass')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sizes', to='catalogue.AttributeTitle')),
            ],
            options={
                'verbose_name_plural': 'Attribute',
                'ordering': ['title'],
            },
            managers=[
                ('my_query', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProductCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='catalogue.Product')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.Characteristics')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_value', to='catalogue.CharacteristicsValue')),
            ],
            options={
                'unique_together': {('product_related', 'title')},
            },
        ),
    ]
