# Generated by Django 2.2 on 2019-09-12 13:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalogue', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Κατάσταση')),
                ('name', models.CharField(help_text='This will be shown in the checkout and basket once the voucher is entered', max_length=128, verbose_name='Name')),
                ('code', models.CharField(db_index=True, max_length=128, unique=True, verbose_name='Code')),
                ('usage', models.CharField(choices=[('Single use', 'Χρήση μόνο μια φορά'), ('Multi-use', 'Πολλαπλή Χρήση από όλους'), ('Once per customer', 'Χρήση μια φορά ανά Πελάτη')], default='Multi-use', max_length=128, verbose_name='Είδος Χρήσης')),
                ('start_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Χρήση από')),
                ('end_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='Χρήση εώς')),
                ('num_basket_additions', models.PositiveIntegerField(default=0, verbose_name='Συνολικές Προσθήκες στο καλάθι')),
                ('num_orders', models.PositiveIntegerField(default=0, verbose_name='Συνολικές Προσθήκες στις Παραγγελίες')),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='VoucherRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Description for the costumers')),
                ('offer_type', models.CharField(choices=[('Site', 'Site offer - available to all users and products'), ('Category', 'Category offer - only available for certain categories '), ('Brand', 'Brand offer - available to certain brands'), ('Products', 'Products offer - Manual add Products')], default='Site', max_length=128)),
                ('exclusive', models.BooleanField(default=True)),
                ('benefit_type', models.CharField(choices=[('Percentage', "Discount is a percentage off of the product's value"), ('Absolute', "Discount is a fixed amount off of the product's value"), ('Multibuy', 'Discount is to give the cheapest product for free'), ('Fixed price', 'Reduce the cost of order by the value'), ('Shipping absolute', 'Discount is a fixed amount of the shipping cost')], default='Percentage', max_length=128, verbose_name='Discount Type')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('priority', models.IntegerField(db_index=True, default=0)),
                ('max_global_applications', models.PositiveIntegerField(blank=True, null=True)),
                ('max_user_applications', models.PositiveIntegerField(blank=True, null=True)),
                ('max_basket_applications', models.PositiveIntegerField(blank=True, null=True)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('num_applications', models.PositiveIntegerField(default=0)),
                ('num_orders', models.PositiveIntegerField(default=0)),
                ('voucher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='voucher_rule', to='voucher.Voucher')),
            ],
        ),
        migrations.CreateModel(
            name='ProductRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('include_all_products', models.BooleanField(default=True)),
                ('classes', models.ManyToManyField(to='catalogue.ProductClass')),
                ('excluded_products', models.ManyToManyField(related_name='excluded_products', to='catalogue.Product')),
                ('included_brands', models.ManyToManyField(to='catalogue.Brand')),
                ('included_categories', models.ManyToManyField(to='catalogue.Category')),
                ('included_products', models.ManyToManyField(related_name='included_products', to='catalogue.Product')),
                ('voucher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='voucher_range', to='voucher.Voucher')),
            ],
        ),
    ]
